#include <windows.h>
#include <gl/gl.h>
#include <gl/glut.h>
#include <ctime>
#include <cstdio>
using namespace std;
#pragma comment(lib, "opengl32.lib")
#pragma comment(lib, "glu32.lib")
#pragma comment(lib, "glut32.lib")

// Global Variables ***/
UINT prevFrameTime = -1;


//Creates the main window, registers event handlers, and
//initializes OpenGL stuff.
void InitGraphics(int argc, char *argv[]);


//Sets the logical coordinate system we will use to specify
//our drawings.
void SetTransformations() {
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(-100, 100, -100, 100);
}

void Update()
{
	UINT currTime = GetTickCount();
	//the first update?
	if(prevFrameTime == -1) {
		prevFrameTime = currTime;
		return;
	}
	float dt = (currTime - prevFrameTime)/1000.0;
	
}

void OnDisplay() {
	//set the background color to Black
	glClearColor(0, 0, 0, 0);
	glClear(GL_COLOR_BUFFER_BIT);
	
	SetTransformations();

	
	//The Sun (Yellow)
	
	glBegin(GL_QUADS);
		glColor3f(1, 1, 0);
		glVertex3f(10, 10, 0);
		glVertex3f(-10, 10, 0);
		glVertex3f(-10, -10, 0);
		glVertex3f(10, -10, 0);
	glEnd();
	

	
	//The Earth (Blue)
	
	
	glBegin(GL_QUADS);
		glColor3f(0, 0, 1);
		glVertex3f(5, 5, 0);
		glVertex3f(-5, 5, 0);
		glVertex3f(-5, -5, 0);
		glVertex3f(5, -5, 0);
	glEnd();
	
	
		glBegin(GL_QUADS);
			glColor3f(1, 1, 1);
			glVertex3f(2.5, 2.5, 0);
			glVertex3f(-2.5, 2.5, 0);
			glVertex3f(-2.5, -2.5, 0);
			glVertex3f(2.5, -2.5, 0);
		glEnd();
	
	

	glutSwapBuffers();
	Update();
	glutPostRedisplay();
}

int main(int argc, char* argv[]) {
	InitGraphics(argc, argv);
	return 0;
}


//Creates the main window, registers event handlers, and
//initializes OpenGL stuff.
void InitGraphics(int argc, char *argv[]) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE);
	glutInitWindowPosition(100, 100); //pass (-1, -1) for Window-Manager defaults
	glutInitWindowSize(800, 600);
	glutCreateWindow("Solar System");
	glutDisplayFunc(OnDisplay);
	glutMainLoop();
}
